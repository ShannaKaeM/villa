# Villa Design Book Architecture Roadmap
*Last Updated: June 1, 2025*

## 🎯 Project Overview
The **Design Book** is a brand-agnostic interface for editing and managing design tokens across both Twig components and WordPress integration. It maintains strict atomic design principles with clear separation between WordPress and the independent Twig component system.

**Live URL**: `villa-community20.local/design-book/`

---

## 🏗️ Core Architecture Principles

### Design Book Token System
- **Design Book Tokens**: `--db-*` prefixed CSS variables (brand-agnostic)
- **Design Book Styling**: `design-book.css` contains all Design Book interface styles
- **WordPress Integration**: `theme.json` presets for WordPress editor only (not Design Book styling)
- **Independent Outputs**: Design Book editor updates both systems separately, no dependency chain

### Atomic Design Hierarchy (4 Levels)

#### **1. Primitives** (Pure Design Tokens - NO "book" suffix)
- **Location**: `templates/primitives/`
- **Examples**: `typography.twig`, `color.twig`, `spacing.twig`
- **Connection**: ONLY connect to Design Book tokens (`--db-*`)
- **Rule**: NO composition, pure design tokens only
- **WordPress Sync**: Design Book editor updates both `--db-*` tokens AND theme.json separately
- **Styling**: Design Book interface styled by `design-book.css`, not theme.json

#### **2. Elements** (Semantic Components - WITH "book" suffix)  
- **Location**: `templates/elements/`
- **Examples**: `text-book.twig`, `button-book.twig`, `input-book.twig`
- **Connection**: ONLY compose Twig primitives (NO theme.json connection)
- **Rule**: Compose primitives only, no other elements
- **Token Usage**: Use Design Book tokens (`--db-*`) via primitive composition

#### **3. Components** (Complex UI - WITH "book" suffix)
- **Location**: `templates/components/`  
- **Examples**: `card-book.twig`, `modal-book.twig`, `nav-book.twig`
- **Connection**: ONLY compose Twig elements and primitives (NO theme.json connection)
- **Rule**: Compose elements and primitives, business logic allowed
- **Token Usage**: Inherit Design Book tokens through element/primitive composition

#### **4. Sections** (Page Sections - WITH "book" suffix)
- **Location**: `templates/sections/`
- **Examples**: `hero-book.twig`, `featured-book.twig`, `testimonial-book.twig`  
- **Connection**: ONLY compose Twig components and elements (NO theme.json connection)
- **Rule**: Compose components and elements, layout and content logic
- **Token Usage**: Inherit Design Book tokens through component/element composition

---

## ⚠️ Known Issues & Technical Debt

### Typography Live Preview System
**Status**: ✅ Resolved  
**Solution**: Removed complex font preview isolation system. Design Book interface now uses hardcoded system fonts (`-apple-system, BlinkMacSystemFont, etc.`) to prevent interference from font changes. Font previews update the main CSS custom properties directly for immediate visual feedback.

### Design Book CSS Architecture
**Status**: ✅ Resolved  
**Issue**: Previously had two separate CSS files (`design-book.css` and `design-book-standalone.css`) causing confusion and potential style conflicts.  
**Solution**: Successfully merged both files into a single comprehensive `design-book.css` that provides all Design Book interface styling:
- Enhanced design tokens using actual hex values (not theme.json references)
- Professional Design Book container and navigation styles
- Complete Color Book functionality with CSS custom properties
- Typography Book styling support
- Comprehensive responsive design system
- Single source of truth for all Design Book interface styling
- **Note**: theme.json is only used for WordPress editor integration, not Design Book styling

---

## 📁 File Structure

```
/app/public/wp-content/themes/miGV/
├── assets/
│   ├── css/design-book.css      # Design Book interface styles
│   └── js/design-book.js        # Design Book functionality
├── templates/
│   ├── design-book/
│   │   ├── dashboard.twig       # Design Book dashboard
│   │   ├── typography.twig      # Typography Book interface
│   │   ├── colors.twig          # Colors Book interface
│   │   └── layout.twig          # Layout Book interface
│   ├── primitives/              # NO theme.json connection after initial sync
│   │   ├── typography.twig      # ✅ Font families, sizes, weights
│   │   ├── color.twig           # ✅ Color palette and utilities  
│   │   ├── spacing.twig         # ✅ Padding, margin, gap scales
│   │   ├── layout.twig          # Grid, flexbox, container utilities
│   │   ├── border.twig          # Border radius, width, style
│   │   └── shadow.twig          # Box shadow utilities
│   ├── elements/                # Twig-only composition
│   │   ├── text-book.twig       # ✅ Semantic text component
│   │   ├── button-book.twig     # ✅ Button variants
│   │   ├── input-book.twig      # Form input component
│   │   ├── icon-book.twig       # Icon component
│   │   └── badge-book.twig      # Badge/label component
│   ├── components/              # Twig-only composition
│   │   ├── card-book.twig       # Card component
│   │   ├── modal-book.twig      # Modal component
│   │   ├── nav-book.twig        # Navigation component
│   │   ├── form-book.twig       # Form component
│   │   └── media-book.twig      # Media object component
│   └── sections/                # Twig-only composition
│       ├── hero-book.twig       # Hero section
│       ├── featured-book.twig   # Featured content section
│       ├── testimonial-book.twig # Testimonial section
│       └── cta-book.twig        # Call-to-action section
├── inc/
│   └── design-book-router.php   # Design Book routing and data
└── functions.php                # AJAX handlers and WordPress integration
```

---

## 🔄 Token Flow Architecture

### Design Book Editor → Dual Output System
```
Typography Book Interface
         ↓
    [Save Changes]
         ↓
    ┌─────────────────┬─────────────────┐
    ↓                 ↓                 ↓
Design Book Tokens   theme.json    WordPress Editor
(--db-text-xl)      (fontSizes)    (presets available)
    ↓                                   
Twig Primitives                        
    ↓                                   
Twig Elements                          
    ↓                                   
Twig Components                        
    ↓                                   
Twig Sections                          

Design Book Interface Styling:
design-book.css (independent of theme.json)
```

### Key Principles
1. **Primitives**: Only layer that connects to Design Book tokens
2. **Elements/Components/Sections**: Pure Twig composition, no theme.json connection
3. **WordPress Integration**: Separate parallel output from Design Book editor (theme.json for WP editor only)
4. **Independence**: Twig system works completely independently of WordPress
5. **Design Book Styling**: All interface styling comes from `design-book.css`, not theme.json

---

## 🛠️ Development Patterns

### Primitive Development
```twig
{# typography.twig - Connects to Design Book tokens #}
<div class="typography-primitive" 
     style="font-size: var(--db-text-{{ size }}); 
            font-family: var(--db-font-{{ family }});">
    {{ content }}
</div>
```

### Element Development  
```twig
{# text-book.twig - Composes primitives only #}
{% include 'primitives/typography.twig' with {
    size: size|default('base'),
    family: family|default('primary'),
    content: content
} %}
```

### Component Development
```twig
{# card-book.twig - Composes elements and primitives #}
<div class="card-book">
    {% include 'elements/text-book.twig' with {
        size: 'lg',
        content: title
    } %}
    {% include 'primitives/spacing.twig' with {
        type: 'padding',
        size: 'md'
    } %}
</div>
```

---

## 📋 Implementation Status

### ✅ Completed
- Design Book dashboard interface
- Typography Book with theme.json sync
- Color Book with real-time preview and AJAX save functionality
- Primitive templates (typography, color, spacing)
- Element templates (text-book, button-book)
- Design Book CSS/JS framework with `--db-*` tokens
- Montserrat font integration with all weights (300-900)
- Fixed Twig template errors
- **Unified CSS architecture** - Merged standalone and main CSS files into comprehensive design system
- **Color Book styling** - Complete responsive UI with CSS custom properties for real-time updates
- **Typography Book styling** - Professional controls and preview system

### 🔄 In Progress  
- AJAX save handlers for bidirectional sync
- Typography Book → Design Book tokens update
- Typography Book → theme.json update (parallel)

### 📋 Next Steps (4-Week Plan)

#### Week 1: Complete Typography Book
- [ ] Implement save functionality for font families
- [ ] Implement save functionality for font sizes
- [ ] Add font weight and line height controls
- [ ] Test bidirectional sync

#### Week 2: Colors Book
- [ ] Create colors.twig primitive
- [ ] Build Colors Book interface
- [ ] Implement color palette editor
- [ ] Add color utility generation

#### Week 3: Layout & Spacing Book
- [ ] Create layout.twig and border.twig primitives
- [ ] Build Layout Book interface
- [ ] Add grid and spacing controls
- [ ] Implement responsive utilities

#### Week 4: Elements & Components
- [ ] Expand elements library (input-book, icon-book)
- [ ] Build first components (card-book, modal-book)
- [ ] Create component preview system
- [ ] Add composition documentation

---

## 🎯 Success Criteria
- ✅ Design Book editor as single source of truth
- ✅ Twig components completely independent of WordPress
- ✅ WordPress integration through parallel theme.json updates
- ✅ Atomic design hierarchy strictly maintained
- ✅ Brand-agnostic `--db-*` token system
- ✅ Scalable, maintainable component architecture

---

## 🔗 Navigation Structure
- **Primitives** → Typography, Colors, Layout, Spacing
- **Elements** → Text Book, Button Book, Input Book, Icon Book  
- **Components** → Card Book, Modal Book, Nav Book, Form Book
- **Sections** → Hero Book, Featured Book, Testimonial Book, CTA Book