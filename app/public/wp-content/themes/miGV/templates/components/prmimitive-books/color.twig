{#
/**
 * Color Primitive Component
 * 
 * Applies design token colors consistently across components
 * 
 * @param string color - Color token name (e.g., 'primary', 'secondary', 'base-light')
 * @param string property - CSS property to apply color to ('color', 'background-color', 'border-color')
 * @param string element - HTML element to wrap content (default: 'span')
 * @param string class - Additional CSS classes
 * @param string content - Content to wrap (optional)
 * @param boolean inline - Whether to render inline styles (default: false, uses CSS classes)
 * 
 * Usage:
 * {% include 'components/prmimitive-books/color.twig' with {
 *   'color': 'primary',
 *   'property': 'background-color'
 * } %}
 * 
 * {% include 'components/prmimitive-books/color.twig' with {
 *   'color': 'secondary',
 *   'property': 'color',
 *   'content': 'Hello World'
 * } %}
 * 
 * @file app/public/wp-content/themes/miGV/templates/components/prmimitive-books/color.twig
 */
#}

{# Set defaults #}
{% set color = color|default('base') %}
{% set property = property|default('color') %}
{% set element = element|default('span') %}
{% set class = class|default('') %}
{% set content = content|default('') %}
{% set inline = inline|default(false) %}

{# Generate CSS variable reference #}
{% set color_var = 'var(--wp--preset--color--' ~ color ~ ')' %}

{# Build CSS class name for non-inline usage #}
{% set color_class = 'color-' ~ property|replace({'color': 'text', 'background-color': 'bg', 'border-color': 'border'}) ~ '-' ~ color %}

{# Build style attribute for inline usage #}
{% set style_attr = inline ? property ~ ': ' ~ color_var ~ ';' : '' %}

{# Build complete class attribute #}
{% set complete_class = [color_class, class]|join(' ')|trim %}

{# Render the element #}
{% if content %}
    <{{ element }}{% if complete_class and not inline %} class="{{ complete_class }}"{% endif %}{% if style_attr %} style="{{ style_attr }}"{% endif %}>
        {{ content|raw }}
    </{{ element }}>
{% else %}
    {# Self-closing or container mode - output opening tag only #}
    <{{ element }}{% if complete_class and not inline %} class="{{ complete_class }}"{% endif %}{% if style_attr %} style="{{ style_attr }}"{% endif %}>
{% endif %}

{# Generate CSS classes for design system (when not using inline styles) #}
{% if not inline %}
<style>
    .color-text-{{ color }} {
        color: var(--wp--preset--color--{{ color }});
    }
    
    .color-bg-{{ color }} {
        background-color: var(--wp--preset--color--{{ color }});
    }
    
    .color-border-{{ color }} {
        border-color: var(--wp--preset--color--{{ color }});
    }
</style>
{% endif %}
