{#
/**
 * Button Book Element - Villa Design System
 * 
 * Unified button element that uses primitives for styling
 * 
 * Individual Button Usage:
 * {% include 'elements/button-book.twig' with {
 *   'variant': 'primary',
 *   'size': 'medium',
 *   'content': 'Click Me',
 *   'href': '/link'
 * } %}
 * 
 * Showcase Usage:
 * {% include 'elements/button-book.twig' with {
 *   'showcase': true
 * } %}
 */
#}

{% set showcase = showcase|default(false) %}

{% if showcase %}
    {# SHOWCASE MODE - Display all button variants #}
    {% set variants = {
        'primary': {
            'label': 'Primary Button',
            'description': 'Main call-to-action button',
            'variant': 'primary'
        },
        'secondary': {
            'label': 'Secondary Button', 
            'description': 'Secondary action button',
            'variant': 'secondary'
        },
        'outline': {
            'label': 'Outline Button',
            'description': 'Lightweight button with border',
            'variant': 'outline'
        },
        'ghost': {
            'label': 'Ghost Button',
            'description': 'Transparent button with hover effect',
            'variant': 'ghost'
        },
        'text': {
            'label': 'Text Button',
            'description': 'Simple text button',
            'variant': 'text'
        }
    } %}

    <div class="button-book p-8">
        <h2 class="mb-6">Button Variants</h2>
        
        {% for variant_key, settings in variants %}
            <div class="mb-8">
                <div class="mb-4">
                    <h3 class="text-lg font-semibold">{{ settings.label }}</h3>
                    <p class="text-sm text-neutral">{{ settings.description }}</p>
                </div>
                
                <div class="flex gap-4">
                    {# Regular button #}
                    {% include 'elements/button-book.twig' with {
                        'variant': settings.variant,
                        'size': 'medium',
                        'content': 'Button Text'
                    } %}
                    
                    {# Button with icon #}
                    {% include 'elements/button-book.twig' with {
                        'variant': settings.variant,
                        'size': 'medium',
                        'content': 'With Icon',
                        'icon': 'arrow-right',
                        'icon_position': 'right'
                    } %}
                </div>
            </div>
        {% endfor %}
    </div>

{% else %}
    {# INDIVIDUAL BUTTON MODE - Using Primitives #}
    {% set variant = variant|default('primary') %}
    {% set size = size|default('medium') %}
    {% set icon = icon|default(null) %}
    {% set icon_position = icon_position|default('left') %}
    {% set disabled = disabled|default(false) %}
    {% set element = element|default(href ? 'a' : 'button') %}
    {% set content = content|default('Button') %}

    {# Button variant configurations using primitives #}
    {% set button_configs = {
        'primary': {
            'bg_color': 'primary',
            'text_color': 'base-white',
            'border_color': 'primary',
            'hover_bg': 'primary-dark',
            'hover_border': 'primary-dark'
        },
        'secondary': {
            'bg_color': 'secondary',
            'text_color': 'base-white', 
            'border_color': 'secondary',
            'hover_bg': 'secondary-dark',
            'hover_border': 'secondary-dark'
        },
        'outline': {
            'bg_color': 'transparent',
            'text_color': 'primary',
            'border_color': 'primary',
            'hover_bg': 'primary',
            'hover_text': 'base-white'
        },
        'ghost': {
            'bg_color': 'transparent',
            'text_color': 'primary',
            'border_color': 'transparent',
            'hover_bg': 'primary-light'
        },
        'text': {
            'bg_color': 'transparent',
            'text_color': 'primary',
            'border_color': 'transparent',
            'hover_text': 'primary-dark'
        }
    } %}

    {% set size_configs = {
        'small': {
            'font_size': 'small',
            'padding': 'sm',
            'padding_x': 'lg'
        },
        'medium': {
            'font_size': 'medium',
            'padding': 'md',
            'padding_x': 'xl'
        },
        'large': {
            'font_size': 'large',
            'padding': 'lg',
            'padding_x': '2xl'
        }
    } %}

    {% set config = button_configs[variant] %}
    {% set size_config = size_configs[size] %}

    <{{ element }} 
        class="villa-button villa-button--{{ variant }} villa-button--{{ size }}{{ class ? ' ' ~ class : '' }}"
        {% if element == 'a' and href %}href="{{ href }}"{% endif %}
        {% if element == 'button' %}type="{{ type|default('button') }}"{% endif %}
        {{ disabled ? 'disabled' : '' }}
        {{ attributes|raw }}
    >
        {% if icon and icon_position == 'left' %}
            <i class="icon-{{ icon }}"></i>
        {% endif %}
        
        {# Use text-book element with button type #}
        {% include 'components/element-books/text-book.twig' with {
            'type': 'button',
            'size': size_config.font_size,
            'content': content,
            'element': 'span'
        } %}
        
        {% if icon and icon_position == 'right' %}
            <i class="icon-{{ icon }}"></i>
        {% endif %}
    </{{ element }}>

{# Button styling handled via CSS classes using design tokens #}

    <style>
    .villa-button {
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: var(--wp--custom--layout--spacing--sm);
        border: var(--wp--custom--layout--border-width--medium) solid var(--wp--preset--color--{{ config.border_color }});
    }

    .villa-button:hover:not([disabled]) {
        {% if config.hover_bg %}background-color: var(--wp--preset--color--{{ config.hover_bg }});{% endif %}
        {% if config.hover_border %}border-color: var(--wp--preset--color--{{ config.hover_border }});{% endif %}
        {% if config.hover_text %}color: var(--wp--preset--color--{{ config.hover_text }});{% endif %}
    }

    .villa-button:focus {
        outline: var(--wp--custom--layout--border-width--medium) solid var(--wp--preset--color--primary);
        outline-offset: var(--wp--custom--layout--spacing--xs);
    }

    .villa-button[disabled] {
        opacity: 0.6;
        cursor: not-allowed;
        pointer-events: none;
    }
    </style>

{% endif %}
