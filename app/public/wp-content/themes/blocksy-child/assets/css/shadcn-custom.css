/**
 * Villa Community Theme - Custom CSS Variables
 * This file contains the custom design system variables
 * properly scoped for Blocksy theme integration
 */

/* ========================================
 * GLOBAL ROOT VARIABLES
 * ======================================== */
:root {
  /* ----------------------------------------
   * FOUNDATIONAL PALETTE (Single Source of Truth)
   * Using OKLCH for better color manipulation
   * ---------------------------------------- */
  --theme-palette-color-1: #598992; /* Primary */
  --theme-palette-color-2: #9c5961; /* Secondary */
  --theme-palette-color-3: #9b8974; /* Neutral */
  --theme-palette-color-4: #828282; /* Base */
  --theme-palette-color-5: #ffffff; /* White */
  --theme-palette-color-6: #000000; /* Black */

  /* Base color definitions using OKLCH */
  --primary: oklch(from var(--theme-palette-color-1) l c h);
  --secondary: oklch(from var(--theme-palette-color-2) l c h);
  --neutral: oklch(from var(--theme-palette-color-3) l c h);
  --base: oklch(from var(--theme-palette-color-4) l c h);
  --white: oklch(from var(--theme-palette-color-5) l c h);
  --black: oklch(from var(--theme-palette-color-6) l c h);

  /* ----------------------------------------
   * COLOR VARIATIONS
   * Each color has 5 variations for flexibility
   * ---------------------------------------- */
  
  /* Primary color variations */
  --color-primary: var(--primary);
  --color-primary-lightest: oklch(from var(--primary) calc(l + 20%) c h);
  --color-primary-light: oklch(from var(--primary) calc(l + 10%) c h);
  --color-primary-med: oklch(from var(--primary) calc(l + 0%) c h);
  --color-primary-dark: oklch(from var(--primary) calc(l - 10%) c h);
  --color-primary-darkest: oklch(from var(--primary) calc(l - 20%) c h);
  
  /* Secondary color variations */
  --color-secondary: var(--secondary);
  --color-secondary-lightest: oklch(from var(--secondary) calc(l + 20%) c h);
  --color-secondary-light: oklch(from var(--secondary) calc(l + 10%) c h);
  --color-secondary-med: oklch(from var(--secondary) calc(l + 0%) c h);
  --color-secondary-dark: oklch(from var(--secondary) calc(l - 10%) c h);
  --color-secondary-darkest: oklch(from var(--secondary) calc(l - 20%) c h);
  
  /* Neutral color variations */
  --color-neutral: var(--neutral);
  --color-neutral-lightest: oklch(from var(--neutral) calc(l + 20%) c h);
  --color-neutral-light: oklch(from var(--neutral) calc(l + 10%) c h);
  --color-neutral-med: oklch(from var(--neutral) calc(l + 0%) c h);
  --color-neutral-dark: oklch(from var(--neutral) calc(l - 10%) c h);
  --color-neutral-darkest: oklch(from var(--neutral) calc(l - 20%) c h);
  
  /* Base color variations */
  --color-base: var(--base);
  --color-base-lightest: oklch(from var(--base) calc(l + 20%) c h);
  --color-base-light: oklch(from var(--base) calc(l + 10%) c h);
  --color-base-med: oklch(from var(--base) calc(l + 0%) c h);
  --color-base-dark: oklch(from var(--base) calc(l - 10%) c h);
  --color-base-darkest: oklch(from var(--base) calc(l - 20%) c h);
  
  /* White and Black (no variations needed) */
  --color-white: var(--white);
  --color-black: var(--black);

  /* ----------------------------------------
   * SEMANTIC MAPPINGS
   * Map theme colors to semantic uses
   * ---------------------------------------- */
  --background: var(--color-white);
  --foreground: var(--color-base-darkest);
  --card: var(--color-white);
  --card-foreground: var(--color-base-dark);
  --popover: var(--color-white);
  --popover-foreground: var(--color-base-dark);
  --muted: var(--color-neutral-light);
  --muted-foreground: var(--color-base);
  --accent: var(--color-secondary-light);
  --accent-foreground: var(--color-secondary-darkest);
  --border: var(--color-base-light);
  --input: var(--color-base-light);
  --ring: var(--color-primary);
  
  /* Component-specific variables */
  --radius: 0.5rem;
  --destructive: oklch(0.5 0.2 30);
  --destructive-foreground: var(--color-white);
}

/* ========================================
 * BLOCKSY-SPECIFIC SCOPING
 * Scope all custom styles to Blocksy theme
 * ======================================== */
.ct-main-container,
[data-theme="blocksy"],
body.blocksy-theme {
  /* Apply theme colors within Blocksy containers */
  color: var(--foreground);
  background-color: var(--background);
}

/* ========================================
 * UTILITY CLASSES
 * Similar to Tailwind but using CSS variables
 * ======================================== */

/* Background utilities */
.bg-primary { background-color: var(--color-primary); }
.bg-primary-lightest { background-color: var(--color-primary-lightest); }
.bg-primary-light { background-color: var(--color-primary-light); }
.bg-primary-dark { background-color: var(--color-primary-dark); }
.bg-primary-darkest { background-color: var(--color-primary-darkest); }

.bg-secondary { background-color: var(--color-secondary); }
.bg-secondary-lightest { background-color: var(--color-secondary-lightest); }
.bg-secondary-light { background-color: var(--color-secondary-light); }
.bg-secondary-dark { background-color: var(--color-secondary-dark); }
.bg-secondary-darkest { background-color: var(--color-secondary-darkest); }

.bg-neutral { background-color: var(--color-neutral); }
.bg-neutral-lightest { background-color: var(--color-neutral-lightest); }
.bg-neutral-light { background-color: var(--color-neutral-light); }
.bg-neutral-dark { background-color: var(--color-neutral-dark); }
.bg-neutral-darkest { background-color: var(--color-neutral-darkest); }

.bg-base { background-color: var(--color-base); }
.bg-base-lightest { background-color: var(--color-base-lightest); }
.bg-base-light { background-color: var(--color-base-light); }
.bg-base-dark { background-color: var(--color-base-dark); }
.bg-base-darkest { background-color: var(--color-base-darkest); }

.bg-white { background-color: var(--color-white); }
.bg-black { background-color: var(--color-black); }

/* Text color utilities */
.text-primary { color: var(--color-primary); }
.text-primary-lightest { color: var(--color-primary-lightest); }
.text-primary-light { color: var(--color-primary-light); }
.text-primary-dark { color: var(--color-primary-dark); }
.text-primary-darkest { color: var(--color-primary-darkest); }

.text-secondary { color: var(--color-secondary); }
.text-secondary-lightest { color: var(--color-secondary-lightest); }
.text-secondary-light { color: var(--color-secondary-light); }
.text-secondary-dark { color: var(--color-secondary-dark); }
.text-secondary-darkest { color: var(--color-secondary-darkest); }

.text-neutral { color: var(--color-neutral); }
.text-neutral-lightest { color: var(--color-neutral-lightest); }
.text-neutral-light { color: var(--color-neutral-light); }
.text-neutral-dark { color: var(--color-neutral-dark); }
.text-neutral-darkest { color: var(--color-neutral-darkest); }

.text-base { color: var(--color-base); }
.text-base-lightest { color: var(--color-base-lightest); }
.text-base-light { color: var(--color-base-light); }
.text-base-dark { color: var(--color-base-dark); }
.text-base-darkest { color: var(--color-base-darkest); }

.text-white { color: var(--color-white); }
.text-black { color: var(--color-black); }

/* Border utilities */
.border-primary { border-color: var(--color-primary); }
.border-secondary { border-color: var(--color-secondary); }
.border-neutral { border-color: var(--color-neutral); }
.border-base { border-color: var(--color-base); }
.border-base-light { border-color: var(--color-base-light); }

/* ========================================
 * COMPONENT STYLES
 * Pre-built components using theme colors
 * ======================================== */

/* Buttons */
.btn {
  padding: 0.5rem 1rem;
  border-radius: var(--radius);
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 500;
  display: inline-block;
  text-decoration: none;
}

.btn-primary {
  background-color: var(--color-primary);
  color: var(--color-white);
}

.btn-primary:hover {
  background-color: var(--color-primary-dark);
}

.btn-secondary {
  background-color: var(--color-secondary);
  color: var(--color-white);
}

.btn-secondary:hover {
  background-color: var(--color-secondary-dark);
}

.btn-outline {
  background-color: transparent;
  border: 2px solid var(--color-primary);
  color: var(--color-primary);
}

.btn-outline:hover {
  background-color: var(--color-primary);
  color: var(--color-white);
}

/* Cards */
.card {
  background-color: var(--card);
  color: var(--card-foreground);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  padding: 1.5rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.card-header {
  margin-bottom: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border);
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--color-base-darkest);
}

/* Forms */
.input,
.textarea,
.select {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--input);
  border-radius: var(--radius);
  background-color: var(--background);
  color: var(--foreground);
  transition: border-color 0.2s ease;
}

.input:focus,
.textarea:focus,
.select:focus {
  outline: none;
  border-color: var(--ring);
  box-shadow: 0 0 0 3px rgba(89, 137, 146, 0.1);
}

/* Labels */
.label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--color-base-dark);
}

/* ========================================
 * BLOCKSY OVERRIDES
 * Override specific Blocksy styles
 * ======================================== */

/* Blocksy header adjustments */
.ct-header {
  background-color: var(--background);
  border-bottom: 1px solid var(--border);
}

/* Blocksy navigation */
.ct-header .ct-nav-menu > li > a {
  color: var(--foreground);
}

.ct-header .ct-nav-menu > li > a:hover {
  color: var(--color-primary);
}

/* Blocksy content area */
.ct-container-narrow,
.ct-container {
  color: var(--foreground);
}

/* Blocksy links */
.ct-main-container a {
  color: var(--color-primary);
}

.ct-main-container a:hover {
  color: var(--color-primary-dark);
}

/* ========================================
 * RESPONSIVE HELPERS
 * ======================================== */

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  :root {
    --background: var(--color-base-darkest);
    --foreground: var(--color-white);
    --card: var(--color-base-dark);
    --card-foreground: var(--color-white);
    --popover: var(--color-base-dark);
    --popover-foreground: var(--color-white);
    --muted: var(--color-base-dark);
    --muted-foreground: var(--color-base-light);
    --border: var(--color-base);
    --input: var(--color-base);
  }
}

/* Utility for applying theme colors dynamically */
.theme-primary { color: var(--color-primary); }
.theme-secondary { color: var(--color-secondary); }
.theme-neutral { color: var(--color-neutral); }
.theme-base { color: var(--color-base); }
